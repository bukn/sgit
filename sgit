repo_dir=$HOME/.sgit
repo_filename=$repo_dir/$filename
installed_dir=/usr/bin/
me_dir=$(cd `dirname $0`; pwd)
#install is a special case

if [ $# -eq 1 ]
then
        if [ $1 = 'install' ] || [ $1 = 'list' ] || [ $1 = 'setremote' ] || [ $1 = 'help' ]
        then
                subcmd=$1
        else
                # $1 must be a filename
                filename=$1
                filename_fullpath=$PWD/$1
                subcmd='none'
                #copy file
                if [ -f $filename_fullpath ]
                then
                        ! [ -f  $repo_filename ] &&  ln -Lv $filename_fullpath $repo_filename
                else
                        echo $filename_fullpath is not a regular file
                        exit
                fi
        fi
elif [ $# -eq 2 ]
then
        subcmd=$1
        filename=$2
        #Ensure repo directory
        if ! [ -d $repo_dir ]
        then
                mkdir -v $repo_dir
        fi
        cd $repo_dir
        if ! [ -d .git ]
        then
                git init
                echo "It's your very first time to use sgit."
                echo "Please execute sgit cfgremote to config remote info(needed by the 'push'/'pull' subcommand)"
                #echo "Please cd to $repo_dir to config your git remote info(needed by the 'push'/'pull' subcommand)"
        fi
else
        echo 'Usage: sgit [subcmd] filename'
        echo 'subcmd = help|list|ci|push|pull|install|setremote'
        exit
fi



#Handle on subcommand
case $subcmd in
        'none')
                echo -e $filename 'is tracked by sgit \e[0;32;1m[OK!]\e[0m'
                exit
                ;;
        'list')
                cd $repo_dir
                git status --short
                exit
                ;;
        'ci')
                cd $repo_dir
                git add $repo_filename
                git commit $repo_filename -m "sgit update $filename"
                [ $? = 0 ] && echo -e "sgit commited, use 'sgit push $filename' to push to remote\e[0;32;1m[OK!]\e[0m"
                ! [ $? = 0 ] && echo -e "sgit push $filename \e[0;31;1m[failed!]\e[0m"
                exit
                ;;
        'setremote')
                cd $repo_dir
                if [ -d sgitremote.git ]
                then
                        rm -rf sgitremote.git
                fi
                git clone --bare . sgitremote.git
                echo sgitremote.git > .gitignore
                echo Input your remote git server such as \'user@your.gitserver.com:/path/to/repo/sgit_repo.git\' \(support ssh only\)
                #echo OR input \'DEFAULT\' to use sgit free public git server
                #echo sgit would create the remote bare repo automatically
                echo -E Server:
                read server
                scp -v -r sgitremote.git $server
                git remote add sgitremote $server
                ;;
        'pull')
                cd $repo_dir
                remote=`git remote -v|grep origin|cut -f1|head -n1` #get the remote name, need to be 'sgitremote'
                if [ x$remote = xsgitremote ]
                then
                        git pull
                else
                        echo remote has not been set, please use \'sgit setremote\' to set it
                fi
                ;;
        'push')
                cd $repo_dir
                remote=`git remote -v|grep origin|cut -f1|head -n1` #get the remote name, need to be 'sgitremote'
                if [ x$remote = xsgitremote ]
                then
                        git push sgitremote master
                else
                        echo remote has not been set, please use \'sgit setremote\' to set it
                fi
                ;;
        'install')
                sudo cp -v $me_dir/sgit $installed_dir
                [ $? = 0 ] && echo -e 'sgit installed. \e[0;32;1m[OK!]\e[0m', to uninstall ,just sudo rm /usr/bin/sgit
                exit
                ;;
        *)
                echo 'Usage: sgit [subcmd] filename'
                echo 'subcmd = none|ci|push|pull|install'
                exit
                ;;
esac
